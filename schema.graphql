type Achievement {
  awards: [Award!]!
  description: String!
  icon: String!
  id: String!
  name: String!
  tags: [String!]!
}

type Assets {
  AdvanceGrayPainting: String!
  AdvancePainting: String!
  Avatar: String!
  AwakenPhoto: String!
  DescPainting: String!
  GrayPainting: String!
  HasGotAwakenEntrance: String!
  Name2Picture: String!
  Name3Picture: String!
  NamePicture: String!
  NotGotAwakenEntrance: String!
  Painting: String!
  ThumbPainting: String!
  TitlePicture: String!
  WeaponShowPicture: String!
}

type Awakening {
  Description: String!
  Icon: String!
  Name: String!
  Need: Int!
}

type Award {
  amount: Int!
  type: String!
}

type Banner {
  bannerNo: Int!
  detailsLink: String!
  end: String!
  finalRerun: Boolean!
  imitationId: String
  isCollab: Boolean!
  isRerun: Boolean!
  limitedBannerOnly: Boolean!
  matrixId: String
  simulacrum: String
  start: String!
  weaponId: String
}

type FashionWeaponInfo {
  FashionImitationId: String!
  FashionName: String!
}

type Food {
  buff: String!
  categories: [String!]!
  description: String!
  effect: String
  icon: String!
  id: String!
  ingredients: [Ingredient!]!
  name: String!
  quality: String!
  stars: Int!
}

type Ingredient {
  matID: String!
  max: String!
  min: String!
}

type Item {
  description: String
  icon: String
  id: String!
  name: String
  rarity: String!
  type: String!
}

type ListKeys {
  Time: Float!
  Value: Float!
}

type Matrice {
  Banners: [Banner!]!
  SimulacrumID: String
  assets: MatrixAssets!
  description: String!
  id: String!
  name: String!
  rarity: String!
  sets: [MatriceSet!]!
  type: String!
}

type MatriceSet {
  description: String
  need: Int
}

type MatrixAssets {
  icon: String!
  iconLarge: String!
}

type MatrixSuit {
  MatrixSuitDes: String!
  MatrixSuitName: String!
}

type MetaData {
  analyticVideoId: String
  rating: [Int!]!
  recommendedMatrices: [RecoMatrix!]!
  recommendedPairings: [String!]!
}

type Mount {
  assets: MountAsset!
  description: String!
  id: String!
  name: String
}

type MountAsset {
  icon: String!
  showImage: String!
}

type Outfit {
  description: String
  icon: String!
  id: String!
  name: String
  source: String
  type: String!
}

type Query {
  achievement(id: String = null, lang: String! = "en", name: String = null): Achievement!
  achievements(lang: String! = "en"): [Achievement!]!
  food(id: String = null, lang: String! = "en", name: String = null): Food!
  foods(lang: String! = "en"): [Food!]!
  item(id: String = null, lang: String! = "en", name: String = null): Item!
  items(lang: String! = "en"): [Item!]!
  matrices(lang: String! = "en"): [Matrice!]!
  matrix(id: String = null, lang: String! = "en", name: String = null): Matrice!
  mount(id: String = null, lang: String! = "en", name: String = null): Mount!
  mounts(lang: String! = "en"): [Mount!]!
  outfit(id: String = null, lang: String! = "en", name: String = null): Outfit!
  outfits(lang: String! = "en"): [Outfit!]!
  relic(id: String = null, lang: String! = "en", name: String = null): Relic!
  relics(lang: String! = "en"): [Relic!]!
  servant(id: String = null, lang: String! = "en", name: String = null): SmartServant!
  servants(lang: String! = "en"): [SmartServant!]!
  simulacra(lang: String! = "en"): [Simulacra!]!
  simulacra_v2(lang: String! = "en"): [SimulacraV2!]!
  simulacrum(id: String = null, lang: String! = "en", name: String = null): Simulacra!
  simulacrum_v2(id: String = null, lang: String! = "en", name: String = null): SimulacraV2!
  weapon(id: String = null, lang: String! = "en", name: String = null): Weapon!
  weapons(lang: String! = "en"): [Weapon!]!
}

type RecoMatrix {
  id: String!
  pieces: Int!
}

type Relic {
  advancements: [String!]!
  attributeID: String!
  description: String
  icon: String!
  id: String!
  name: String!
  rarity: String!
  source: String
  type: String!
}

type ServantAsset {
  activatedIcon: String!
  itemIcon: String!
  petIcon: String!
}

type ServantSkill {
  description: String!
  icon: String!
  name: String!
}

type ServantUpgrade {
  id: String!
  xpGain: Int!
}

type ShatterOrCharge {
  tier: String!
  value: Float!
}

type Simulacra {
  AdvanceImitations: String
  Age: String
  AssetsA0: Assets!
  AssetsA3: Assets
  AvatarId: String!
  Awakenings: [Awakening!]!
  Banners: [Banner!]!
  BelongTo: String
  Birthday: String
  CVMap: VoiceActors!
  CharacterSex: String!
  Dislike: [String!]!
  Gender: String
  Height: String
  Hometown: String
  Job: String
  Like: [String!]!
  MatrixId: String
  Name: String!
  Rarity: String!
  Title: String
  UnlockInfo: String!
  WeaponId: String
  id: String!
}

type SimulacraV2 {
  AdvanceImitations: String
  Age: String
  AssetsA0: Assets!
  AssetsA3: Assets
  AvatarId: String!
  Awakenings: [Awakening!]!
  Banners: [Banner!]!
  BelongTo: String
  Birthday: String
  CVMap: VoiceActors!
  CharacterSex: String!
  Dislike: [String!]!
  Gender: String
  Height: String
  Hometown: String
  Job: String
  Like: [String!]!
  Matrix: Matrice
  MatrixId: String
  Name: String!
  Rarity: String!
  Title: String
  UnlockInfo: String!
  Weapon: Weapon
  WeaponId: String
  id: String!
}

type Skill {
  Description: String
  Icon: String
  Name: String
  Operations: [String!]!
  ShortDesc: String
  Tags: [String!]!
  Values: [[ListKeys!]!]!
}

type SmartServant {
  assets: ServantAsset!
  description: String!
  element: String!
  id: String!
  name: String!
  rarity: String!
  skills: [ServantSkill!]!
  type: String!
  upgradeItems: [ServantUpgrade!]!
}

type VoiceActors {
  Chinese: String
  English: String
  Japanese: String
  Korean: String
  Portuguese: String
}

type Weapon {
  Assets: WeaponAssets!
  Banners: [Banner!]!
  Brief: String!
  Charge: ShatterOrCharge!
  Description: String!
  FashionWeaponInfos: [FashionWeaponInfo!]!
  IsUpPoolWeapon: Boolean!
  Meta: MetaData
  Name: String!
  Rarity: String!
  RecommendedMatrices: [MatrixSuit!]!
  Shatter: ShatterOrCharge!
  SimulacrumID: String
  WeaponAdvancements: [WeaponAdvancement!]!
  WeaponAttacks: WeaponAttacks!
  WeaponCategory: String!
  WeaponEffects: [WeaponEffect!]!
  WeaponElement: String!
  id: String!
}

type WeaponAdvancement {
  Charge: Float!
  Description: String
  GoldNeeded: Int!
  NeedItem: String
  Shatter: Float!
  WeaponFashionID: String
}

type WeaponAssets {
  ItemIcon: String
  ItemLargeIcon: String
  LotteryCardImage: String
  SoloLeagueBanPickBanner: String
  WeaponIconForMatrix: String
  WeaponUPIcon: String
}

type WeaponAttacks {
  Discharge: WeaponSkills!
  Evade: WeaponSkills!
  Melee: WeaponSkills!
  Skill: WeaponSkills!
}

type WeaponEffect {
  description: String!
  title: String!
}

type WeaponSkills {
  Attacks: [Skill!]!
  Description: String
  Icon: String
  Name: String
}
