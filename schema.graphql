type Advancements {
  description: String
  need: String!
  stats: Stats!
}

type Assets {
  advancePainting: String
  artwork: String
  avatar: String
  awakenEntrance: String
  backPhoto: String
  bannerIcon: String
  grayAdvancePainting: String
  grayAwakenEntrance: String
  grayPainting: String
  lotteryCard: String
  lotteryDrawing: String
  namePicture: String
  painting: String
  rarityIcon: String
  thumbPainting: String
  weaponPicture: String
}

type Awakening {
  description: String!
  name: String!
}

type Banner {
  bannerNo: Int!
  detailsLink: String!
  end: String!
  finalRerun: Boolean!
  isCollab: Boolean!
  isRerun: Boolean!
  limitedBannerOnly: Boolean!
  start: String!
}

type BaseStats {
  icon: String!
  id: String!
  name: String!
}

type MatriceSet {
  description: String
  need: Int
}

type MatriceType {
  assets: MatrixAssets!
  description: String!
  id: String!
  name: String!
  rarity: String!
  sets: [MatriceSet!]!
  type: String!
}

type MatrixAssets {
  icon: String!
  iconLarge: String!
}

type Meta {
  analyticVideoId: String
  rating: [Int!]!
  recommendedMatrices: [RecoMatrix!]!
  recommendedPairings: [String!]!
}

type Query {
  matrices(lang: String! = "en"): [MatriceType!]!
  matrix(id: String!, lang: String! = "en"): MatriceType!
  simulacra(lang: String! = "en", version: String! = "global"): [SimulacraType!]!
  simulacra_v2(lang: String! = "en"): [SimulacraTypeV2!]!
  simulacrum(id: String!, lang: String! = "en", version: String! = "global"): SimulacraType!
  simulacrum_v2(id: String!, lang: String! = "en"): SimulacraTypeV2!
  weapon(id: String!, lang: String! = "en", version: String! = "global"): WeaponType!
  weapons(lang: String! = "en", version: String! = "global"): [WeaponType!]!
}

type RecoMatrix {
  id: String!
  pieces: Int!
}

type ShatterOrCharge {
  tier: String!
  value: Float!
}

type SimulacraType {
  advanceID: String
  age: String!
  assets: Assets!
  avatarID: String!
  awakenings: [Awakening!]!
  banners: [Banner!]!
  city: String!
  gender: String!
  giftTypes: [String!]!
  height: String!
  id: String!
  matrixID: String
  name: String!
  rarity: String
  rating: String!
  state: String!
  voiceActors: VoiceActors!
  weaponID: String
}

type SimulacraTypeV2 {
  advanceID: String
  age: String!
  assets: Assets!
  avatarID: String!
  awakenings: [Awakening!]!
  banners: [Banner!]!
  city: String!
  gender: String!
  giftTypes: [String!]!
  height: String!
  id: String!
  matrice: MatriceType
  matrixID: String
  name: String!
  rarity: String
  rating: String!
  state: String!
  voiceActors: VoiceActors!
  weapon: WeaponType
  weaponID: String
}

type Skill {
  description: String!
  icon: String!
  id: String!
  name: String!
}

type Skills {
  discharge: [Skill!]!
  dodge: [Skill!]!
  normals: [Skill!]!
  skill: [Skill!]!
}

type Stats {
  charge: Float!
  shatter: Float!
}

type UpgradeMaterial {
  id: String!
  need: Int!
}

type VoiceActors {
  chinese: String
  english: String
  japanese: String
  korean: String
  portuguese: String
}

type WeaponAssets {
  icon: String
  weaponMatrixIcon: String
}

type WeaponEffect {
  description: String!
  title: String!
}

type WeaponType {
  advanceID: String
  advancements: [Advancements!]!
  assets: WeaponAssets!
  baseStats: [BaseStats!]!
  charge: ShatterOrCharge!
  description: String!
  element: String!
  id: String!
  meta: Meta
  name: String!
  rarity: String!
  shatter: ShatterOrCharge!
  skills: Skills!
  type: String!
  upgradeMaterials: [UpgradeMaterial!]!
  weaponEffects: [WeaponEffect!]!
}
