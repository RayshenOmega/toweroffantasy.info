type Achievement {
  awards: [Award!]!
  description: String!
  icon: String!
  id: String!
  name: String!
  tags: [String!]!
}

type Advancements {
  description: String
  need: String!
  stats: Stats!
}

type Assets {
  advancePainting: String
  artwork: String
  avatar: String
  awakenEntrance: String
  backPhoto: String
  bannerIcon: String
  grayAdvancePainting: String
  grayAwakenEntrance: String
  grayPainting: String
  lotteryCard: String
  lotteryDrawing: String
  namePicture: String
  painting: String
  rarityIcon: String
  thumbPainting: String
  weaponPicture: String
}

type Awakening {
  description: String!
  name: String!
}

type Award {
  amount: Int!
  type: String!
}

type Banner {
  bannerNo: Int!
  detailsLink: String!
  end: String!
  finalRerun: Boolean!
  imitationId: String
  isCollab: Boolean!
  isRerun: Boolean!
  limitedBannerOnly: Boolean!
  matrixId: String
  simulacrum: String
  start: String!
  weaponId: String
}

type BaseStats {
  icon: String!
  id: String!
  name: String!
}

type Food {
  buff: String!
  categories: [String!]!
  description: String!
  effect: String
  icon: String!
  id: String!
  ingredients: [Ingredient!]!
  name: String!
  quality: String!
  stars: Int!
}

type Ingredient {
  matID: String!
  max: String!
  min: String!
}

type Item {
  description: String
  icon: String
  id: String!
  name: String
  rarity: String!
  type: String!
}

type Matrice {
  assets: MatrixAssets!
  banners: [Banner!]!
  description: String!
  id: String!
  name: String!
  rarity: String!
  sets: [MatriceSet!]!
  type: String!
}

type MatriceSet {
  description: String
  need: Int
}

type MatrixAssets {
  icon: String!
  iconLarge: String!
}

type Meta {
  analyticVideoId: String
  rating: [Int!]!
  recommendedMatrices: [RecoMatrix!]!
  recommendedPairings: [String!]!
}

type Mount {
  assets: MountAsset!
  description: String!
  id: String!
  name: String
}

type MountAsset {
  icon: String!
  showImage: String!
}

type Outfit {
  description: String
  icon: String!
  id: String!
  name: String
  source: String
  type: String!
}

type Query {
  achievement(id: String = null, lang: String! = "en", name: String = null): Achievement!
  achievements(lang: String! = "en"): [Achievement!]!
  food(id: String = null, lang: String! = "en", name: String = null): Food!
  foods(lang: String! = "en"): [Food!]!
  item(id: String = null, lang: String! = "en", name: String = null): Item!
  items(lang: String! = "en"): [Item!]!
  matrices(lang: String! = "en"): [Matrice!]!
  matrix(id: String = null, lang: String! = "en", name: String = null): Matrice!
  mount(id: String = null, lang: String! = "en", name: String = null): Mount!
  mounts(lang: String! = "en"): [Mount!]!
  outfit(id: String = null, lang: String! = "en", name: String = null): Outfit!
  outfits(lang: String! = "en"): [Outfit!]!
  relic(id: String = null, lang: String! = "en", name: String = null): Relic!
  relics(lang: String! = "en"): [Relic!]!
  servant(id: String = null, lang: String! = "en", name: String = null): SmartServant!
  servants(lang: String! = "en"): [SmartServant!]!
  simulacra(lang: String! = "en", version: String! = "global"): [Simulacra!]!
  simulacra_v2(lang: String! = "en"): [SimulacraV2!]!
  simulacrum(id: String = null, lang: String! = "en", name: String = null, version: String! = "global"): Simulacra!
  simulacrum_v2(id: String = null, lang: String! = "en", name: String = null): SimulacraV2!
  weapon(id: String = null, lang: String! = "en", name: String = null, version: String! = "global"): Weapon!
  weapons(lang: String! = "en", version: String! = "global"): [Weapon!]!
}

type RecoMatrix {
  id: String!
  pieces: Int!
}

type Relic {
  advancements: [String!]!
  attributeID: String!
  description: String
  icon: String!
  id: String!
  name: String!
  rarity: String!
  source: String
  type: String!
}

type ServantAsset {
  activatedIcon: String!
  itemIcon: String!
  petIcon: String!
}

type ServantSkill {
  description: String!
  icon: String!
  name: String!
}

type ServantUpgrade {
  id: String!
  xpGain: Int!
}

type ShatterOrCharge {
  tier: String!
  value: Float!
}

type Simulacra {
  advanceID: String
  age: String!
  assets: Assets!
  avatarID: String!
  awakenings: [Awakening!]!
  banners: [Banner!]!
  city: String!
  gender: String!
  giftTypes: [String!]!
  height: String!
  id: String!
  matrixID: String
  name: String!
  rarity: String
  rating: String!
  state: String!
  voiceActors: VoiceActors!
  weaponID: String
}

type SimulacraV2 {
  advanceID: String
  age: String!
  assets: Assets!
  avatarID: String!
  awakenings: [Awakening!]!
  banners: [Banner!]!
  city: String!
  gender: String!
  giftTypes: [String!]!
  height: String!
  id: String!
  matrice: Matrice
  matrixID: String
  name: String!
  rarity: String
  rating: String!
  state: String!
  voiceActors: VoiceActors!
  weapon: Weapon
  weaponID: String
}

type Skill {
  description: String!
  icon: String!
  id: String!
  name: String!
}

type Skills {
  discharge: [Skill!]!
  dodge: [Skill!]!
  normals: [Skill!]!
  skill: [Skill!]!
}

type SmartServant {
  assets: ServantAsset!
  description: String!
  element: String!
  id: String!
  name: String!
  rarity: String!
  skills: [ServantSkill!]!
  type: String!
  upgradeItems: [ServantUpgrade!]!
}

type Stats {
  charge: Float!
  shatter: Float!
}

type UpgradeMaterial {
  id: String!
  need: Int!
}

type VoiceActors {
  chinese: String
  english: String
  japanese: String
  korean: String
  portuguese: String
}

type Weapon {
  advanceID: String
  advancements: [Advancements!]!
  assets: WeaponAssets!
  banners: [Banner!]!
  baseStats: [BaseStats!]!
  charge: ShatterOrCharge!
  description: String!
  element: String!
  id: String!
  meta: Meta
  name: String!
  rarity: String!
  shatter: ShatterOrCharge!
  skills: Skills!
  type: String!
  upgradeMaterials: [UpgradeMaterial!]!
  weaponEffects: [WeaponEffect!]!
}

type WeaponAssets {
  icon: String
  weaponMatrixIcon: String
}

type WeaponEffect {
  description: String!
  title: String!
}
